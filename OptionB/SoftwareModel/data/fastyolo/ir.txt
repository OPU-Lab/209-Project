num:[9]
type:[1, 1, 1, 1, 1, 1, 1, 1, 1]
input_ddr_addr:[[0], [1], [2], [3], [4], [5], [6], [7], [8]]
output_ddr_addr:[[2], [3], [4], [5], [6], [7], [8], [9], [-1]]
input_size:[[418, 418, 3], [210, 210, 16], [106, 106, 32], [54, 54, 64], [28, 28, 128], [17, 17, 256], [15, 15, 512], [15, 15, 1024], [13, 13, 1024]]
output_size:[[210, 210, 16], [106, 106, 32], [54, 54, 64], [28, 28, 128], [17, 17, 256], [15, 15, 512], [15, 15, 1024], [13, 13, 1024], [13, 13, 30]]
ker_size:[[3, 3, 1], [3, 3, 1], [3, 3, 1], [3, 3, 1], [3, 3, 1], [3, 3, 1], [3, 3, 1], [3, 3, 1], [1, 1, 1]]
ker_stride:[[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]]
pooling:[1, 1, 1, 1, 1, 1, 0, 0, 0]
pooling_size:[[2, 2, 1], [2, 2, 1], [2, 2, 1], [2, 2, 1], [2, 2, 1], [2, 2, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]]
pooling_stride:[[2, 2, 1], [2, 2, 1], [2, 2, 1], [2, 2, 1], [2, 2, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]]
pooling_type:[1, 1, 1, 1, 1, 1, 0, 0, 0]
activation_type:[2, 2, 2, 2, 2, 2, 2, 2, 0]
residual:[0, 0, 0, 0, 0, 0, 0, 0, 0]
shortcut_source:[[], [], [], [], [], [], [], [], []]
output_choice:[[3, -1], [3, -1], [3, -1], [3, -1], [3, -1], [3, -1], [3, -1], [3, -1], [3, -1]]
res_position:[3, 3, 3, 3, 3, 3, 3, 3, 3]
pool_pad:[0, 0, 0, 0, 0, 0, 0, 0, 0]
pool_pad_size:[[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]
upsampling_scale:[0, 0, 0, 0, 0, 0, 0, 0, 0]
post_padding:[1, 1, 1, 1, 1, 1, 1, 0, 0]
post_padding_size:[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [2, 2, 2, 2], [1, 1, 1, 1], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]]
pre_remove_padding:[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [1, 0, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
input_fm_fix_lo:[7, 2, 7, 7, 8, 8, 8, 9, 5]
output_fm_fix_lo:[2, 7, 7, 8, 8, 8, 9, 5, 3]
weights_fix_lo:[2, 11, 7, 8, 8, 9, 9, 6, 8]
bias_fix_lo:[11, 16, 16, 18, 17, 16, 16, 13, 13]
cin_unit: [32, 16 , 32 , 64 , 64 , 64 , 64 , 64 , 64]
cout_unit: [32, 64 , 64 , 64 , 64 , 64 , 64 , 64 , 32]
dma_blk_size: [(38, 38, 64), (38, 38, 64), (38, 38, 64), (28, 28, 64), (28, 28, 64), (16, 16, 64), (15, 15, 64), (15, 15, 64), (13, 13, 64)]
ofm_blk_size: [(19, 19, 64), (18, 18, 64), (18, 18, 64), (13, 13, 64), (13, 13, 64), (13, 13, 64), (13, 13, 64), (13, 13, 64), (13, 13, 64)]
input_from:[[-1], [0], [1], [2], [3], [4], [5], [6], [7]]
input_file_name: 'inp.mat'
